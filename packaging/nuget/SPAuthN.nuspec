<package>

  <metadata>

    <id>SPAuthN</id>
    <version>1.1.2</version>
    <title>SPAuthN</title>

    <description>SharePoint .Net auth with Node.js</description>
    <tags>sharepoint auth dotnet nodejs node-sp-auth crazystuff</tags>

    <releaseNotes>forceprompts and settings object issue fix</releaseNotes>

    <authors>Andrew Koltyakov</authors>
    <owners>ARVO Systems</owners>
    <copyright>Copyright 2017, ARVO Systems</copyright>
    <projectUrl>https://github.com/koltyakov/SPAuthN</projectUrl>
    <iconUrl>https://raw.githubusercontent.com/koltyakov/SPAuthN/master/packaging/nuget/SPAuthN.png</iconUrl>

    <summary>Hey! Attention please! On the first place, it is a crazy experiment which solves one of the our very specific task for a frontier technology stack with SharePoint/Node.js/.Net where we need running the same exactly auth mechanisms which we use in Node.js but in .Net applications. We know exactly what we're doing and why. Please use the lib only in case when native .Net Credentials strategies do not suite your app.</summary>

    <licenseUrl>https://raw.githubusercontent.com/koltyakov/SPAuthN/master/LICENSE</licenseUrl>
    <requireLicenseAcceptance>false</requireLicenseAcceptance>
    
    <dependencies>
      <dependency id="Edge.js" version="8.2.1" />
    </dependencies>

  </metadata>

  <files>
    <file src="..\..\SPAuthN\bin\Debug\SPAuthN.dll" target="lib\net45" />
    <file src="..\..\SPAuthN\bin\Debug\SPAuthN.dll" target="lib\net45" />
    <file src="..\..\SPAuthN\auth\**\*.*" target="content/auth" />
    <file src=".\install.ps1" target="tools" />
  </files>

</package>